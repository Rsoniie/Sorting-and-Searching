******BRUTE FORCE LINEAR SEARCH TC = O(N)**********
---------------------------------------------------
USING BS TC = O(LOGN)*****************
#include <bits/stdc++.h> 
int f(vector<int> arr, int k, int s, int e)
{
    int mid =  (s+e)/2;
    int ans = -1;
    while(s<=e)
    {
        if(arr[mid] == k)
        {
            ans = mid;
            e = mid-1;
        }
        else if(arr[mid] > k)
        {
            e = mid-1;
        }
        else 
        {
            s = mid+1;
        }
        mid = (s+e)/2;
    }
    return ans;
} 
int l(vector<int> arr, int k, int s, int e)
{
    int mid =  (s+e)/2;
    int ans = -1;
    while(s<=e)
    {
        if(arr[mid] == k)
        {
             ans = mid;
             s = mid+1 ;
        }
        else if(arr[mid] > k)
        {
            e = mid-1;
        }
        else 
        {
            s = mid+1;
        }
        mid = (s+e)/2;
    }
    return ans;
}
pair<int, int> firstAndLastPosition(vector<int>& arr, int n, int k)
{
     int a = f(arr, k, 0, n-1);
     int b = l(arr, k, 0, n-1);
     pair<int,int> p;
     p.first = a;
     p.second = b;
     return p;
     
}
